{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/mnt/c/sites/contact_book_app/src/App.js\";\nimport React, { Fragment, useState } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport { PlusOutlined } from \"@ant-design/icons\"; // import AppModal from './AddModal';\n\nimport AppDrawer from './AddDrawer'; // function App() {\n//   const [showModal, setShowModal] = useState(false)\n//   return (\n//    <Fragment>\n//       <Button \n//         type=\"primary\" icon={<PlusOutlined/>} \n//         data-testid=\"add-contact-button\"\n//         onClick={()=>setShowModal(true)}>\n//         Add\n//       </Button>\n//       <AppModal \n//         data-testid=\"add-contact-modal\" \n//         show={showModal} \n//         handleOnClose={()=>setShowModal(false)}\n//       />\n//    </Fragment>\n//   );\n// }\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }\n    }),\n    \"data-testid\": \"add-contact-button\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(AppDrawer, {\n    \"data-testid\": \"add-contact-modal\",\n    show: showModal,\n    handleOnClose: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/sites/contact_book_app/src/App.js"],"names":["React","Fragment","useState","PlusOutlined","AppDrawer","App","showModal","setShowModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;;AACA,OAAO,WAAP;AAEA,SAAQC,YAAR,QAA2B,mBAA3B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AACE,IAAA,IAAI,EAAC,SADP;AACiB,IAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvB;AAEE,mBAAY,oBAFd;AAGE,IAAA,OAAO,EAAE,MAAIK,YAAY,CAAC,IAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADH,eAQG,oBAAC,SAAD;AACE,mBAAY,mBADd;AAEE,IAAA,IAAI,EAAED,SAFR;AAGE,IAAA,aAAa,EAAE,MAAIC,YAAY,CAAC,KAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,CADD;AAgBD;;AAGD,eAAeF,GAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Button } from 'antd';\nimport {PlusOutlined} from \"@ant-design/icons\";\n// import AppModal from './AddModal';\nimport AppDrawer from './AddDrawer';\n\n// function App() {\n//   const [showModal, setShowModal] = useState(false)\n//   return (\n//    <Fragment>\n//       <Button \n//         type=\"primary\" icon={<PlusOutlined/>} \n//         data-testid=\"add-contact-button\"\n//         onClick={()=>setShowModal(true)}>\n//         Add\n//       </Button>\n\n//       <AppModal \n//         data-testid=\"add-contact-modal\" \n//         show={showModal} \n//         handleOnClose={()=>setShowModal(false)}\n//       />\n//    </Fragment>\n//   );\n// }\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false)\n  return (\n   <Fragment>\n      <Button \n        type=\"primary\" icon={<PlusOutlined/>} \n        data-testid=\"add-contact-button\"\n        onClick={()=>setShowModal(true)}>\n        Add\n      </Button>\n\n      <AppDrawer \n        data-testid=\"add-contact-modal\" \n        show={showModal} \n        handleOnClose={()=>setShowModal(false)}\n      />\n   </Fragment>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}