{"ast":null,"code":"import \"antd/es/drawer/style\";\nimport _Drawer from \"antd/es/drawer\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/mnt/c/sites/contact_book_app/src/AddDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst AddDrawer = ({\n  show,\n  handleOnClose,\n  handleOnFinish,\n  handleOnFinishFailed\n}) => {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: null,\n    emails: \"\",\n    twitter: \"\"\n  };\n  return /*#__PURE__*/React.createElement(_Drawer, {\n    Title: \"Add Contact\",\n    visible: show,\n    onClose: handleOnClose // closable={false}\n    ,\n    maskClosable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Contact Form\"), /*#__PURE__*/React.createElement(_Form, {\n    name: \"basic\",\n    initialValues: initialValues,\n    onFinish: handleOnFinish,\n    onFinishFailed: handleOnFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"First Name\",\n    name: \"firstName\",\n    rules: [{\n      required: true,\n      message: \"Please input contact's first name!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    rules: [{\n      required: true,\n      message: \"Please input contact's last name!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Phone Number\",\n    name: \"phoneNumber\",\n    rules: [{\n      required: true,\n      message: \"Please input contact's phone name!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Twitter\",\n    name: \"twitter\",\n    rules: [{\n      required: true,\n      message: \"Please input contact's twitter username!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(_Form.List, {\n    name: \"emails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, fields.map(field => /*#__PURE__*/React.createElement(_Space, {\n      key: field.key,\n      style: {\n        display: 'flex',\n        marginBottom: 8\n      },\n      align: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      name: [field.name, 'email'],\n      fieldKey: [field.fieldKey, 'email'] // rules={[{ required: true, message: 'Missing first name' }]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }), \" Add Email\")));\n  }), /*#__PURE__*/React.createElement(_Form.List, {\n    name: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, fields.map(field => /*#__PURE__*/React.createElement(_Space, {\n      key: field.key,\n      style: {\n        display: 'flex',\n        marginBottom: 8\n      },\n      align: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      name: [field.name, 'twitter'],\n      fieldKey: [field.fieldKey, 'twitter'] // rules={[{ required: true, message: 'Missing first name' }]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Twitter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }), \" Add Twitter Username\")));\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nAddDrawer.propTypes = {\n  show: PropTypes.bool.isRequired,\n  handleOnClose: PropTypes.func.isRequired,\n  handleOnFinish: PropTypes.func.isRequired,\n  handleOnFinishFailed: PropTypes.func.isRequired\n};\nexport default AddDrawer;","map":{"version":3,"sources":["/mnt/c/sites/contact_book_app/src/AddDrawer.js"],"names":["React","PropTypes","MinusCircleOutlined","PlusOutlined","AddDrawer","show","handleOnClose","handleOnFinish","handleOnFinishFailed","initialValues","firstName","lastName","phoneNumber","emails","twitter","required","message","fields","add","remove","map","field","key","display","marginBottom","name","fieldKey","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Drawer, Form, Input, Button, Space } from 'antd'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst AddDrawer=({show,handleOnClose,handleOnFinish,handleOnFinishFailed}) => {\r\n    const initialValues={firstName:\"\",lastName:\"\",phoneNumber:null,emails:\"\",twitter:\"\"}\r\n    return (\r\n        <Drawer \r\n            Title=\"Add Contact\"\r\n            visible={show} \r\n            onClose={handleOnClose} \r\n            // closable={false}\r\n            maskClosable={false}\r\n            >\r\n            <h1>Contact Form</h1>\r\n         \r\n            <Form\r\n            \r\n                name=\"basic\"\r\n                initialValues={initialValues}\r\n                onFinish={handleOnFinish}\r\n                onFinishFailed={handleOnFinishFailed}\r\n                >\r\n                <Form.Item\r\n                    label=\"First Name\"\r\n                    name=\"firstName\"\r\n                    rules={[{ required: true, message: \"Please input contact's first name!\" }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    rules={[{ required: true, message: \"Please input contact's last name!\" }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                \r\n                <Form.Item\r\n                    label=\"Phone Number\"\r\n                    name=\"phoneNumber\"\r\n                    rules={[{ required: true, message: \"Please input contact's phone name!\" }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n            \r\n                {/* <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: \"Please input contact's email!\" }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item> */}\r\n            \r\n                <Form.Item\r\n                    label=\"Twitter\"\r\n                    name=\"twitter\"\r\n                    rules={[{ required: true, message: \"Please input contact's twitter username!\" }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.List name=\"emails\">\r\n                    {(fields, { add, remove }) => {\r\n                    return (\r\n                        <div>\r\n                        {fields.map(field => (\r\n                            <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\r\n                            <Form.Item\r\n                               \r\n                                name={[field.name, 'email']}\r\n                                fieldKey={[field.fieldKey, 'email']}\r\n                                // rules={[{ required: true, message: 'Missing first name' }]}\r\n                            >\r\n                                <Input placeholder=\"Email\" />\r\n                            </Form.Item>\r\n                        \r\n\r\n                            <MinusCircleOutlined\r\n                                onClick={() => {\r\n                                remove(field.name);\r\n                                }}\r\n                            />\r\n                            </Space>\r\n                        ))}\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                            type=\"dashed\"\r\n                            onClick={() => {\r\n                                add();\r\n                            }}\r\n                            block\r\n                            >\r\n                            <PlusOutlined /> Add Email\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </div>\r\n                    );\r\n                }}\r\n                </Form.List>\r\n\r\n                <Form.List name=\"twitter\">\r\n                    {(fields, { add, remove }) => {\r\n                    return (\r\n                        <div>\r\n                        {fields.map(field => (\r\n                            <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"start\">\r\n                            <Form.Item\r\n                               \r\n                                name={[field.name, 'twitter']}\r\n                                fieldKey={[field.fieldKey, 'twitter']}\r\n                                // rules={[{ required: true, message: 'Missing first name' }]}\r\n                            >\r\n                                <Input placeholder=\"Twitter Username\" />\r\n                            </Form.Item>\r\n                        \r\n\r\n                            <MinusCircleOutlined\r\n                                onClick={() => {\r\n                                remove(field.name);\r\n                                }}\r\n                            />\r\n                            </Space>\r\n                        ))}\r\n\r\n                        <Form.Item>\r\n                            <Button\r\n                            type=\"dashed\"\r\n                            onClick={() => {\r\n                                add();\r\n                            }}\r\n                            block\r\n                            >\r\n                            <PlusOutlined /> Add Twitter Username\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </div>\r\n                    );\r\n                }}\r\n                </Form.List>\r\n            \r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Drawer>\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nAddDrawer.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleOnClose: PropTypes.func.isRequired,\r\n    handleOnFinish: PropTypes.func.isRequired,\r\n    handleOnFinishFailed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddDrawer \r\n\r\n"]},"metadata":{},"sourceType":"module"}